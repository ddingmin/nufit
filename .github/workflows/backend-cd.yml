# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Backend CD

on:
  push:
    branches:
      - main
      - develop

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
    - uses: actions/checkout@v3
    
    - name: Copy Secret
      env:
          OCCUPY_SECRET: ${{ secrets.OCCUPY_SECRET }}
          OCCUPY_SECRET_DIR: src/main/resources
          OCCUPY_SECRET_TEST_DIR: src/main/resources
          OCCUPY_SECRET_DIR_FILE_NAME: application-oauth.yml
      run: echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_DIR/$OCCUPY_SECRET_DIR_FILE_NAME && 
           echo $OCCUPY_SECRET | base64 --decode > $OCCUPY_SECRET_TEST_DIR/$OCCUPY_SECRET_DIR_FILE_NAME
           
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ap-northeast-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Upload to S3
      working-directory: ./backend
      run: |
        aws deploy push \
          --application-name nufit-CD \
          --ignore-hidden-files \
          --s3-locatioon s3://nufit-bucket/build/$GITHUB_SHA.zip \
          --source .
      

    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name nufit-CD \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name spring-deploy-group \
          --s3-location bucket=nufit-bucket,key=build/$GITHUB_SHA.zip,bundleType=zip
